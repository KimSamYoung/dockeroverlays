# Manual overlay
## BOTH
sudo ./setup_vxlan 42 overns proxy dstport 4789

# Move interfaces to containers
# Create containers
## BOTH
docker run -d --net=none --name=demo debian sleep infinity

## DOCKER0
docker exec demo ip link show
sudo ./plumb br42@overns demo 192.168.0.10/24 02:42:c0:a8:00:10

## DOCKER1
sudo ./plumb br42@overns demo 192.168.0.20/24 02:42:c0:a8:00:20

## DOCKER0
docker exec demo ip addr show

## Test ping?
docker exec -it demo ping 192.168.0.20
sudo ip netns exec overns ip neighbor show

## DOCKER0
sudo ip netns exec overns ip neighbor add 192.168.0.20 lladdr 02:42:c0:a8:00:20 dev vxlan42
sudo ip netns exec overns bridge fdb add 02:42:c0:a8:00:20 dev vxlan42 self dst 10.0.1.10 vni 42 port 4789

## DOCKER1
sudo ip netns exec overns ip neighbor add 192.168.0.10 lladdr 02:42:c0:a8:00:10 dev vxlan42
sudo ip netns exec overns bridge fdb add 02:42:c0:a8:00:10 dev vxlan42 self dst 10.0.0.10 vni 42 port 4789

## DOCKER0
docker exec -it demo ping 192.168.0.20


## BGP
##CLEAN UP
sudo ip netns delete overns
docker rm -f demo
sudo rm /var/run/netns/demo

## Start BGP
## BOTH (CLEAN UP BEFORE!!)
docker run -t -d --privileged --name quagga -p 179:179 --hostname docker -v $(pwd)/quagga:/etc/quagga cumulusnetworks/quagga:CL3.2.1_evpn

## DOCKER0
docker exec -it quagga vtysh
show run
show bgp neighbors
show bgp evpn summary
show bgp evpn route
show bgp evpn vni

## BOTH
sudo ./setup_vxlan 42 container:quagga dstport 4789 nolearning
## DOCKER0
docker exec -it quagga vtysh
show bgp evpn route
show evpn vni
show evpn mac vni all

# Create container and attach it
## DOCKER0
docker run -d --net=none --name=demo debian sleep infinity
sudo ./plumb br42@quagga demo 192.168.0.10/24@192.168.0.1 02:42:c0:a8:00:10

## DOCKER1
docker run -d --net=none --name=demo debian sleep infinity
sudo ./plumb br42@quagga demo 192.168.0.20/24@192.168.0.1 02:42:c0:a8:00:20

# Ping
docker exec -it demo ping 192.168.0.20

## DOCKER0
docker exec -it quagga vtysh
show evpn vni
show bgp evpn route
show evpn mac vni all

## Second overlay?
## BOTH
sudo ./setup_vxlan 66 container:quagga dstport 4789 nolearning

## DOCKER0
docker run -d --net=none --name=demo66 debian sleep infinity
sudo ./plumb br66@quagga demo66 192.168.66.10/24 02:42:c0:a8:66:10
## DOCKER1
docker run -d --net=none --name=demo66 debian sleep infinity
sudo ./plumb br66@quagga demo66 192.168.66.20/24 02:42:c0:a8:66:20

## DOCKER0
docker exec -it demo66 ping 192.168.66.20
docker exec -it demo66 ping 192.168.0.20
docker exec -it quagga vtysh
show evpn vni
show evpn mac vni all

# dhcp
## DOCKER0
docker run -d --net=none --name dhcp -v "$(pwd)/dhcp":/data networkboot/dhcpd eth0
sudo ./plumb br42@quagga dhcp 192.168.0.254/24
docker logs -f dhcp

## DOCKER1
docker run -d --net=none --name=demodhcp debian sleep infinity
sudo ./plumb br42@quagga demodhcp dhcp
docker exec -it demodhcp ip addr
docker exec -it demodhcp ping 192.168.0.10

# non docker
## GATEWAY0
sudo ./setup_vxlan 42 host dstport 4789 nolearning


## Create interface and get IP from dhcp
sudo ip link add dev vethbr type veth peer name vethgw
sudo ip link set vethbr master br42
sudo ip link set vethbr up
sudo ip addr add 192.168.0.1/24 dev vethgw
sudo ip link set vethgw up
arping -c 1 -A -I vethgw 192.168.0.1

ping 192.168.0.10
sudo iptables -t nat -A POSTROUTING ! -d 10.0.0.0/16 -s 192.168.0.0/24 -o eth0 -j MASQUERADE

## DOCKER 1
docker exec -it demodhcp ping 192.168.0.1
docker exec -it demodhcp ping 10.0.0.30
docker exec -it demodhcp ping 8.8.8.8

## SIMPLE
ping 10.0.0.20
ping 192.168.0.1
ping 192.168.0.100


## VM
####
sudo ip tuntap add dev tap0 mode tap
sudo ip link set tap0 master br42
sudo ip link set tap0 up

linuxkit run qemu -mem 512M -networking tap,tap0 linuxkit/linuxkit

qemu-system-i386 -hda wheezy.qcow2 -curses -serial mon:stdio -m 256M -net nic -net tap,ifname=tap0,script=no,downscript=no







########################
ADDITIONNAL
########################
# Gateway
## DOCKER0
docker run -d --name=gateway debian sleep infinity
sudo ./plumb -i eth1 br42@quagga gateway 192.168.0.1/24
sudo ip netns exec gateway iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE

## DOCKER1
docker exec -it demo ping 8.8.8.8
sudo ip netns exec demo ip route add default via 192.168.0.1
docker exec -it demo ping 8.8.8.8

## GATEWAY
sudo ip netns add vmns
sudo ip link add dev vethvmbr type veth peer name vethvm
sudo ip link set vethvmbr master br42
sudo ip link set vethvmbr up
sudo ip link set vethvm netns vmns
sudo ip netns exec vmns ip link set vethvm up
sudo ip netns exec vmns dhclient vethvm



