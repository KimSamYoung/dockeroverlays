### Setup
Remove everything from consul
Remove all containers
Remove dockercon overlay
Remove overns NetNS
Restart docker (to recreate consul key tree)

# Network creation
docker0: docker network create --driver overlay --internal --subnet 192.168.0.0/24 dockercon
docker1: docker network ls

# Connectivity
docker0: docker run -d --ip 192.168.0.100 --net dockercon --name C0 debian sleep infinity
docker1: docker run -it --rm --net dockercon debian

# Configuration
docker exec C0 ip addr
ip addr show
docker network ls

overns=/var/run/docker/netns/xxxx
sudo nsenter --net=$overns ip addr

# VXLAN
docker0:
sudo tcpdump -nn -i eth0 "port 4789"
docker1:
docker run -it --rm --net dockercon debian ping 192.168.0.100

# Discovery
sudo nsenter --net=$overns ip neighbor show
sudo nsenter --net=$overns bridge fdb show

# Distribution
net=$(docker network inspect dockercon -f {{.Id}})
curl -s http://consul:8500/v1/kv/docker/network/v1.0/network/${net}/ | jq  -r ".[0].Value"  |  base64 -d | jq .
python/dump_endpoints.py
serf agent -bind 0.0.0.0:17946 -join 10.0.0.11:7946 -node demo -log-level=debug -event-handler=./serf.sh

docker1: docker run -d --net dockercon debian sleep infinity

# Manual overlay
both: sudo ./setup_vxlan 42 overns proxy dstport 4789

# Move interfaces to containers
# Create containers
docker0: docker run -d --net=none --name=demo debian sleep infinity
docker1: docker run -d --net=none --name=demo debian sleep infinity

docker0: docker exec demo ip link show

docker0: sudo ./plumb -m 1450 br0@overns demo 192.168.0.10/24 02:42:c0:a8:00:10
docker1: sudo ./plumb -m 1450 br0@overns demo 192.168.0.20/24 02:42:c0:a8:00:20

docker0: docker exec demo ip addr show

## Test ping?
docker exec -it demo ping 192.168.0.20
sudo ip netns exec overns ip neighbor show

docker0:
sudo ip netns exec overns ip neighbor add 192.168.0.20 lladdr 02:42:c0:a8:00:20 dev vxlan42
sudo ip netns exec overns bridge fdb add 02:42:c0:a8:00:20 dev vxlan42 self dst 10.0.1.10 vni 42 port 4789

docker1:
sudo ip netns exec overns ip neighbor add 192.168.0.10 lladdr 02:42:c0:a8:00:10 dev vxlan42
sudo ip netns exec overns bridge fdb add 02:42:c0:a8:00:10 dev vxlan42 self dst 10.0.0.10 vni 42 port 4789

docker0:
docker exec -it demo ping 192.168.0.20


## BGP
Clean up
sudo ip netns delete overns
docker rm -f demo
sudo rm /var/run/netns/demo

## Start BGP
docker0 and docker1
docker run -t -d --privileged --name quagga -p 179:179 --hostname docker -v $(pwd)/quagga:/etc/quagga cumulusnetworks/quagga

#docker0
docker exec -it quagga vtysh
show run
show bgp neighbors
show bgp evpn summary
show bgp evpn route
show bgp evpn vni

# both
sudo ./setup_vxlan 42 container:quagga dstport 4789
show evpn vni
show evpn mac vni all
show bgp evpn route

# Create container and attach it
docker0
docker run -d --net=none --name=demo debian sleep infinity
sudo ./plumb -m 1450 br0@quagga demo 192.168.0.10/24 02:42:c0:a8:00:10

docker1
docker run -d --net=none --name=demo debian sleep infinity
sudo ./plumb -m 1450 br0@quagga demo 192.168.0.20/24 02:42:c0:a8:00:20

sudo ip netns exec gateway iptables -t nat -A POSTROUTING -o eth1 -j MASQUERADE


docker run -d --net=none --name dhcp -v "$(pwd)/dhcp":/data networkboot/dhcpd eth0
sudo ./plumb -m 1450 br0@overns dhcp 192.168.0.254/24@192.168.0.1

docker run -d --net=none --name=demo debian sleep infinity
sudo ./plumb -m 1450 br0@overns demo dhcp


